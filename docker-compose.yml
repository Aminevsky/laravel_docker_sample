version: '3'

services:
  httpd:
    container_name: ${PROJECT_NAME}_httpd
    build:
      context: .
      dockerfile: ./docker/httpd/Dockerfile
    image: ${PROJECT_NAME}_httpd
    ports:
      - 80:80
      - 443:443
    privileged:  true
    volumes:
      -  ./laravel:/var/www/html/laravel
    networks:
      - frontend
      - backend

  php-fpm:
    container_name: ${PROJECT_NAME}_php-fpm
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    image: ${PROJECT_NAME}_php-fpm
    ports:
      - 9000
    volumes:
      -  ./laravel:/var/www/html/laravel
    expose: 
      - 9000
    networks:
      - backend
 
  workspace:
    container_name: ${PROJECT_NAME}_workspace
    build:
      context: .
      dockerfile: ./docker/workspace/Dockerfile
    image: ${PROJECT_NAME}_workspace
    volumes:
      -  ./laravel:/var/www/html/laravel
    depends_on: 
      - httpd
      - php-fpm
      - mysql
      - mysql-testing
    networks:
      - backend

  mysql:
    container_name: ${PROJECT_NAME}_mysql
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    image: ${PROJECT_NAME}_mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Tokyo
    ports:
      - 3306:3306
    volumes:
      - ./data/production:/var/lib/mysql
    networks:
      - frontend
      - backend

  mysql-testing:
    container_name: ${PROJECT_NAME}_mysql_testing
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    image: ${PROJECT_NAME}_mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_TESTING}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Tokyo
    ports:
      - 3307:3306
    volumes:
      - ./data/testing:/var/lib/mysql
    networks:
      - frontend
      - backend

  redis:
    container_name: ${PROJECT_NAME}_redis
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    image: ${PROJECT_NAME}_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    networks:
      - frontend
      - backend

  mailcatcher:
    container_name: ${PROJECT_NAME}_mailcatcher
    build:
      context: .
      dockerfile: ./docker/mailcatcher/Dockerfile
    image: ${PROJECT_NAME}_mailcatcher
    ports:
      - 1080:1080
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
